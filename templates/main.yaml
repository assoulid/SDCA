heat_template_version: 2015-04-30

description: Template for microservices

parameters:
  consul_server_instances_count:
    type: number
    label: Consul server instances count
    default: 1
    description: Number of consul server instances to deploy

  w_instances_count:
    type: number
    label: W instances count
    default: 1
    description: Number of w instances to deploy

  s_instances_count:
    type: number
    label: S instances count
    default: 1
    description: Number of s instances to deploy

  b_instances_count:
    type: number
    label: B instances count
    default: 1
    description: Number of b instances to deploy

  p_instances_count:
    type: number
    label: P instances count
    default: 1
    description: Number of p instances to deploy

  i_instances_count:
    type: number
    label: I instances count
    default: 1
    description: Number of i instances to deploy

  galera_instances_count:
    type: number
    label: Galera instances count
    default: 2
    description: Number of galera instances to deploy

  appliWeb_instances_count:
    type: number
    label: AppliWeb instances count
    default: 1
    description: Number of appliWeb instances to deploy

resources:

  critical_components:
    type: critical.yaml
    properties:
      w_instances_count: { get_param: w_instances_count }
      s_instances_count: { get_param: s_instances_count }
      galera_instances_count: { get_param: galera_instances_count }

  consul_servers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: consul_server_instances_count }
      resource_def:
        type: instance_with_volume.yaml
        properties:
          service_name: "consul_server"
          instance_index: "%index%"

  b_servers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: b_instances_count }
      resource_def:
        type: instance_with_volume.yaml
        properties:
          service_name: "b"
          instance_index: "%index%"

  p_servers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: p_instances_count }
      resource_def:
        type: instance_with_volume.yaml
        properties:
          service_name: "p"
          instance_index: "%index%"

  i_servers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: i_instances_count }
      resource_def:
        type: instance_with_volume.yaml
        properties:
          service_name: "i"
          instance_index: "%index%"

  appliWeb_servers:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: appliWeb_instances_count }
      resource_def:
        type: instance_with_floating_ip.yaml
        properties:
          service_name: "appliWeb"
          instance_index: "%index%"

outputs:
  b:
    description: IP addresses of b
    value: { get_attr: [ b_servers, ip_addresses ] }

  w:
    description: IP addresses of w
    value: { get_attr: [ critical_components, w_adresses ] }

  p:
    description: IP addresses of p
    value: { get_attr: [ p_servers, ip_addresses ] }

  s:
    description: IP addresses of s
    value: { get_attr: [ critical_components, s_adresses ] }

  i:
    description: IP addresses of i
    value: { get_attr: [ i_servers, ip_addresses ] }

  consul_server:
    description: IP addresses of consul_servers
    value: { get_attr: [ consul_servers, ip_addresses ] }

  galera_other_node:
    description: IP addresses of galera_other_node instances
    value: { get_attr: [ critical_components, galera_other_node_servers ] }

  galera_first_node:
    description: IP addresses of galera_first_node instances
    value: { get_attr: [ critical_components, galera_first_node_server ] }

  appliWeb:
    description: IP addresses of appliWeb instances
    value: { get_attr: [ appliWeb_servers, ip_addresses ] }
