--- 
- 
  hosts: appliWeb
  tasks:

    - name: Send appliWeb microservice directory
      copy:
        src: ../cloud_native_app/microservices/appliWeb
        dest: /home/centos/
    -
      name: "Run consul agent and join cluster"
      shell: 
        cmd: "screen -m -d consul agent -data-dir=/var/consul.d -config-dir=/etc/consul.d -bind={{ ansible_eth0.ipv4.address }} -join={{ groups['consul_server'][0] }}"
    - 
      delay: 5
      name: "Wait for agent to run or fail"
      register: result
      retries: 5
      shell: 
        cmd: "consul members"
      until: "result.stdout.find(\"{{ inventory_hostname }}\") != -1"
    - 
      name: Stop server if running
      shell:
        cmd: pkill node
      become: true
      become_method: sudo
      ignore_errors: yes
    - 
      become: true
      name: "Access to EPEL repo"
      yum: 
        name: epel-release
    - 
      become: true
      name: "Install NodeJs"
      yum: 
        name: nodejs
        state: latest
    - 
      name: "Install dependencies"
      shell: 
        chdir: /home/centos/appliWeb
        cmd: "npm install"
    -
      name: "Compile typescript files"
      shell:
        chdir: /home/centos/appliWeb
        cmd: "npm run build"

    - name: "Install forever to run Node.js app."
      npm: name=forever global=yes state=present
      become: true
    
    - name: "Check list of Node.js apps running."
      command: forever list
      register: forever_list
      changed_when: false
    - 
      become: true
      become_method: sudo
      name: "Run appliWeb service"
      command: "forever start /home/centos/appliWeb/index.js"
      when: "forever_list.stdout.find('/centos/home/appliWeb/index.js') == -1"
    - 
      name: "Register appliWeb service"
      uri: 
        body: "{{ lookup('file','register_appliWeb.json') }}"
        body_format: json
        method: PUT
        url: "http://localhost:8500/v1/agent/service/register"
  user: centos
  vars: 
    os_pass: "{{ lookup('env','OS_PASSWORD') }}"
