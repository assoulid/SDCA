---
- hosts: b
  user: centos
  vars:
   os_pass: "{{ lookup('env','OS_PASSWORD') }}"
   mg_key: "{{ lookup('env','MG_KEY') }}"
   mg_domain: "{{ lookup('env','MG_DOMAIN') }}"

  tasks:

    - name: Send b microservice directory
      copy:
        src: ../cloud_native_app/microservices/b
        dest: /home/centos/

    - name: Run consul agent and join cluster
      shell:
        cmd: screen -m -d consul agent -data-dir=/var/consul.d -config-dir=/etc/consul.d -bind={{ ansible_eth0.ipv4.address }} -join={{ groups['consul_server'][0] }}

    - name: Wait for agent to run or fail
      shell:
        cmd: consul members
      register: result
      until: result.stdout.find("{{ inventory_hostname }}") != -1
      retries: 5
      delay: 5

    - name: Stop b docker container if already running
      shell:
        cmd: sudo docker rm $(sudo docker stop $(sudo docker ps -a -q  --filter ancestor=b:b))
      ignore_errors: yes

    - name: Build b docker image
      shell:
        chdir: ~/b
        cmd: sudo docker build -t b:b .

    - name: Run b docker container
      shell:
        cmd: docker run --network="host" -e OS_PASSWORD={{ os_pass }} -e MG_KEY={{ mg_key }} -e MG_DOMAIN={{ mg_domain }} -d -p 8090:8090 -p 8500:8500 -p 5000:5000 b:b
      become: true

    - name: Register b service
      uri:
        url: http://localhost:8500/v1/agent/service/register
        method: PUT
        body: "{{ lookup('file','register_b.json') }}"
        body_format: json
